<?xml version="1.0" encoding="UTF-8" ?>
<schema name="core1" version="1.5">
	<!-- attribute "name" is the name of this schema and is only used for display 
		purposes. version="x.y" is Solr's version number for the schema syntax and 
		semantics. It should not normally be changed by applications. 1.0: multiValued 
		attribute did not exist, all fields are multiValued by nature 1.1: multiValued 
		attribute introduced, false by default 1.2: omitTermFreqAndPositions attribute 
		introduced, true by default except for text fields. 1.3: removed optional 
		field compress feature 1.4: autoGeneratePhraseQueries attribute introduced 
		to drive QueryParser behavior when a single string produces multiple tokens. 
		Defaults to off for version >= 1.4 1.5: omitNorms defaults to true for primitive 
		field types (int, float, boolean, string...) -->

	<types>

		<fieldType name="id" class="solr.UUIDField" indexed="false" />

		<fieldType name="string" class="solr.StrField"
			sortMissingLast="true" />

		<!-- boolean type: "true" or "false" -->
		<fieldType name="boolean" class="solr.BoolField"
			sortMissingLast="true" />

		<!-- Default numeric field types. For faster range queries, consider the 
			tint/tfloat/tlong/tdouble types. These fields support doc values, but they 
			require the field to be single-valued and either be required or have a default 
			value. -->
		<fieldType name="int" class="solr.TrieIntField"
			precisionStep="0" positionIncrementGap="0" />

		<fieldType name="float" class="solr.TrieFloatField"
			precisionStep="0" positionIncrementGap="0" />

		<fieldType name="long" class="solr.TrieLongField"
			precisionStep="0" positionIncrementGap="0" />

		<fieldType name="double" class="solr.TrieDoubleField"
			precisionStep="0" positionIncrementGap="0" />

		<!-- Numeric field types that index each value at various levels of precision 
			to accelerate range queries when the number of values between the range endpoints 
			is large. See the javadoc for NumericRangeQuery for internal implementation 
			details. Smaller precisionStep values (specified in bits) will lead to more 
			tokens indexed per value, slightly larger index size, and faster range queries. 
			A precisionStep of 0 disables indexing at different precision levels. -->
		<fieldType name="tint" class="solr.TrieIntField"
			precisionStep="8" positionIncrementGap="0" />

		<fieldType name="tfloat" class="solr.TrieFloatField"
			precisionStep="8" positionIncrementGap="0" />

		<fieldType name="tlong" class="solr.TrieLongField"
			precisionStep="8" positionIncrementGap="0" />

		<fieldType name="tdouble" class="solr.TrieDoubleField"
			precisionStep="8" positionIncrementGap="0" />


		<!-- The format for this date field is of the form 1995-12-31T23:59:59Z, 
			and is a more restricted form of the canonical representation of dateTime 
			http://www.w3.org/TR/xmlschema-2/#dateTime The trailing "Z" designates UTC 
			time and is mandatory. Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z 
			All other components are mandatory. Expressions can also be used to denote 
			calculations that should be performed relative to "NOW" to determine the 
			value, ie... NOW/HOUR ... Round to the start of the current hour NOW-1DAY 
			... Exactly 1 day prior to now NOW/DAY+6MONTHS+3DAYS ... 6 months and 3 days 
			in the future from the start of the current day Consult the DateField javadocs 
			for more information. Note: For faster range queries, consider the tdate 
			type -->
		<fieldType name="date" class="solr.TrieDateField"
			precisionStep="0" positionIncrementGap="0" />


		<!-- A Trie based date field for faster date range queries and date faceting. -->
		<fieldType name="tdate" class="solr.TrieDateField"
			precisionStep="6" positionIncrementGap="0" />


		<!--Binary data type. The data should be sent/retrieved in as Base64 encoded 
			Strings -->
		<fieldtype name="binary" class="solr.BinaryField" />

		<!-- The "RandomSortField" is not used to store or search any data. You 
			can declare fields of this type it in your schema to generate pseudo-random 
			orderings of your docs for sorting or function purposes. The ordering is 
			generated based on the field name and the version of the index. As long as 
			the index version remains unchanged, and the same field name is reused, the 
			ordering of the docs will be consistent. If you want different psuedo-random 
			orderings of documents, for the same version of the index, use a dynamicField 
			and change the field name in the request. -->
		<fieldType name="random" class="solr.RandomSortField"
			indexed="true" />

		<!-- A text field that only splits on whitespace for exact matching of 
			words -->
		<fieldType name="text_ws" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.WhitespaceTokenizerFactory" />
			</analyzer>
		</fieldType>

		<!-- A general text field that has reasonable, generic cross-language defaults: 
			it tokenizes with StandardTokenizer, removes stop words from case-insensitive 
			"stopwords.txt" (empty by default), and down cases. At query time only, it 
			also applies synonyms. -->
		<fieldType name="text_general" class="solr.TextField"
			positionIncrementGap="100">
			<tokenizer class="solr.StandardTokenizerFactory" />
			<filter class="solr.LowerCaseFilterFactory" />
			<filter class="solr.StopFilterFactory" />
		</fieldType>

		<fieldType name="text_wiki" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.WikipediaTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.StopFilterFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.PorterStemFilterFactory" />
			</analyzer>
		</fieldType>

		<fieldType name="text_html" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer>
				<charFilter class="solr.HTMLStripCharFilterFactory" />
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.StopFilterFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.PorterStemFilterFactory" />
			</analyzer>
		</fieldType>

		<fieldType name="text_general_edge_ngram" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.LowerCaseTokenizerFactory" />
				<filter class="solr.EdgeNGramFilterFactory" minGramSize="2"
					maxGramSize="15" side="front" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.LowerCaseTokenizerFactory" />
			</analyzer>
		</fieldType>

		<!-- A text field with defaults appropriate for English: it tokenizes with 
			StandardTokenizer, removes English stop words, down cases , and finally applies 
			Porter's stemming. -->
		<fieldType name="text_en" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.StandardTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.StopFilterFactory" />
				<filter class="solr.EnglishPossessiveFilterFactory" />
				<filter class="solr.PorterStemFilterFactory" />
			</analyzer>
		</fieldType>

		<!-- <fieldType name="pint" class="solr.IntField" /> -->
		<!-- <fieldType name="plong" class="solr.LongField" /> -->
		<!-- <fieldType name="pfloat" class="solr.FloatField" /> -->
		<!-- <fieldType name="pdouble" class="solr.DoubleField" /> -->
		<!-- <fieldType name="pdate" class="solr.DateField" -->
		<!-- sortMissingLast="true" /> -->

		<!-- A specialized field for geospatial search. If indexed, this fieldType 
			must not be multivalued. -->
		<fieldType name="location" class="solr.LatLonType"
			subFieldSuffix="_coordinate" />

		<!-- since fields of this type are by default not stored or indexed, any 
			data added to them will be ignored outright. -->
		<fieldtype name="ignored" stored="false" indexed="false"
			multiValued="true" class="solr.StrField" />
	</types>

	<fields>
		<field name="id" type="string" stored="true" indexed="true"
			required="true" />

		<field name="text" type="text_en" stored="false" indexed="true"
			multiValued="true" />

		<field name="title" type="text_en" stored="true" indexed="true" />


		<!-- SolrCloud version field -->
		<field name="_version_" type="long" indexed="true" stored="true" />

		<!-- Dynamic field definitions allow using convention over configuration 
			for fields via the specification of patterns to match field names. EXAMPLE: 
			name="*_i" will match any field ending in _i (like myid_i, z_i) RESTRICTION: 
			the glob-like pattern in the name attribute must have a "*" only at the start 
			or the end. -->

		<dynamicField name="*_i" type="int" indexed="true"
			stored="true" />

		<dynamicField name="*_is" type="int" indexed="true"
			stored="true" multiValued="true" />

		<dynamicField name="*_s" type="string" indexed="true"
			stored="true" />

		<dynamicField name="*_ss" type="string" indexed="true"
			stored="true" multiValued="true" />

		<dynamicField name="*_l" type="long" indexed="true"
			stored="true" />

		<dynamicField name="*_ls" type="long" indexed="true"
			stored="true" multiValued="true" />

		<dynamicField name="*_t" type="text_en" indexed="true"
			stored="true" />

		<dynamicField name="*_ts" type="text_en" indexed="true"
			stored="true" multiValued="true" />

		<dynamicField name="*_th" type="text_html" indexed="true"
			stored="true" />

		<dynamicField name="*_ths" type="text_html" indexed="true"
			stored="true" multiValued="true" />

		<dynamicField name="*_tw" type="text_wiki" indexed="true"
			stored="true" />

		<dynamicField name="*_tws" type="text_wiki" indexed="true"
			stored="true" multiValued="true" />

		<dynamicField name="*_en" type="text_en" indexed="true"
			stored="true" multiValued="true" />

		<dynamicField name="*_b" type="boolean" indexed="true"
			stored="true" />

		<dynamicField name="*_bs" type="boolean" indexed="true"
			stored="true" multiValued="true" />

		<dynamicField name="*_f" type="float" indexed="true"
			stored="true" />

		<dynamicField name="*_fs" type="float" indexed="true"
			stored="true" multiValued="true" />

		<dynamicField name="*_d" type="double" indexed="true"
			stored="true" />

		<dynamicField name="*_ds" type="double" indexed="true"
			stored="true" multiValued="true" />

		<!-- Type used to index the lat and lon components for the "location" FieldType -->
		<dynamicField name="*_coordinate" type="tdouble" indexed="true"
			stored="false" />

		<dynamicField name="*_dt" type="date" indexed="true"
			stored="true" />

		<dynamicField name="*_dts" type="date" indexed="true"
			stored="true" multiValued="true" />

		<dynamicField name="*_p" type="location" indexed="true"
			stored="true" />
		<dynamicField name="*_ps" type="location" indexed="true"
			stored="true" multiValued="true" />

		<!-- some trie-coded dynamic fields for faster range queries -->
		<dynamicField name="*_ti" type="tint" indexed="true"
			stored="true" />

		<dynamicField name="*_tl" type="tlong" indexed="true"
			stored="true" />

		<dynamicField name="*_tf" type="tfloat" indexed="true"
			stored="false" />

		<dynamicField name="*_td" type="tdouble" indexed="true"
			stored="true" />

		<dynamicField name="*_tdt" type="tdate" indexed="true"
			stored="true" />

		<!-- <dynamicField name="*_pi" type="pint" indexed="true" -->
		<!-- stored="true" /> -->

		<dynamicField name="ignored_*" type="ignored"
			multiValued="true" />

		<dynamicField name="attr_*" type="text_general" indexed="true"
			stored="true" multiValued="true" />

		<dynamicField name="random_*" type="random" stored="false" />

		<copyField source="*_s" dest="text" />

		<copyField source="*_ss" dest="text" />

		<copyField source="*_t" dest="text" />

		<copyField source="*_ts" dest="text" />

		<copyField source="*_tw" dest="text" />

		<copyField source="*_tws" dest="text" />

		<copyField source="*_th" dest="text" />

		<copyField source="*_ths" dest="text" />

	</fields>

	<uniqueKey>id</uniqueKey>

</schema>
