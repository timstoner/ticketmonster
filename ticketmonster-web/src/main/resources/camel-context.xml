<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">


	<!-- <context:property-placeholder location="camel.properties" /> -->

	<!-- Here we define Camel, notice the namespace it uses -->
	<camelContext xmlns="http://camel.apache.org/schema/spring">
		<propertyPlaceholder id="properties"
			location="classpath:camel.properties" />
		<route>
			<from uri="{{botstatusstart.endpoint}}" />
			<log message="Routing message from inbox to outbox queue with data ${body}" />
			<to uri="{{botstatusend.endpoint}}" />
		</route>

	</camelContext>

	<!-- create a Camel ActiveMQ component to use, using the Spring bean style -->
	<!-- we use the vm protocol to communicate intra-jvm which is much faster 
		than tcp -->
	<!-- <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent"> -->
	<!-- <property name="brokerURL" -->
	<!-- value="vm://myBroker?create=false&amp;waitForStart=5000" /> -->
	<!-- </bean> -->

</beans>